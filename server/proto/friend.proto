syntax = "proto3";
package huzch;
import "base.proto";

option cc_generic_services = true;

//好友列表获取
message GetFriendListReq {
    string request_id = 1;
    optional string user_id = 2;
    optional string login_session_id = 3;
}
message GetFriendListRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    repeated UserInfo friends = 4;
}

//好友删除
message FriendRemoveReq {
    string request_id = 1;
    optional string user_id = 2;
    optional string login_session_id = 3;
    string peer_id = 4;
}
message FriendRemoveRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
}

//添加好友--发送好友申请
message FriendAddReq {
    string request_id = 1;
    optional string login_session_id = 2;
    optional string user_id = 3;
    string respondent_id = 4;
}
message FriendAddRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    string notify_event_id = 4;
}

//好友申请的处理
message FriendAddProcessReq {
    string request_id = 1;
    string notify_event_id = 2;
    bool agree = 3;
    string apply_user_id = 4;
    optional string login_session_id = 5;
    optional string user_id = 6;
}
message FriendAddProcessRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3;
    optional string login_session_id = 4; 
}

//获取待处理的，申请自己好友的信息列表
message GetPendingFriendEventListReq {
    string request_id = 1;
    optional string login_session_id = 2;
    optional string user_id = 3;
}

message FriendEvent {
    optional string event_id = 1;
    UserInfo sender = 3;
}
message GetPendingFriendEventListRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    repeated FriendEvent event = 4;
}

//好友搜索
message FriendSearchReq {
    string request_id = 1;
    string search_key = 2;
    optional string login_session_id = 3;
    optional string user_id = 4;
}
message FriendSearchRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    repeated UserInfo user_info = 4;
}

//会话列表获取
message GetChatSessionListReq {
    string request_id = 1;
    optional string login_session_id = 2;
    optional string user_id = 3;
}
message GetChatSessionListRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    repeated ChatSessionInfo chat_sessions_info = 4;
}

//创建会话
message ChatSessionCreateReq {
    string request_id = 1;
    optional string login_session_id = 2;
    optional string user_id = 3;
    string chat_session_name = 4;
    repeated string members_id = 5;
}
message ChatSessionCreateRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3;
    optional ChatSessionInfo chat_session_info = 4; 
}

//获取会话成员列表
message GetChatSessionMemberReq {
    string request_id = 1;
    optional string login_session_id = 2;
    optional string user_id = 3;
    string chat_session_id = 4;
}
message GetChatSessionMemberRsp {
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    repeated UserInfo members_info = 4;
}

service FriendService {
    rpc GetFriendList(GetFriendListReq) returns (GetFriendListRsp);
    rpc FriendRemove(FriendRemoveReq) returns (FriendRemoveRsp);
    rpc FriendAdd(FriendAddReq) returns (FriendAddRsp);
    rpc FriendAddProcess(FriendAddProcessReq) returns (FriendAddProcessRsp);
    rpc FriendSearch(FriendSearchReq) returns (FriendSearchRsp);
    rpc GetChatSessionList(GetChatSessionListReq) returns (GetChatSessionListRsp);
    rpc ChatSessionCreate(ChatSessionCreateReq) returns (ChatSessionCreateRsp);
    rpc GetChatSessionMember(GetChatSessionMemberReq) returns (GetChatSessionMemberRsp);
    rpc GetPendingFriendEventList(GetPendingFriendEventListReq) returns (GetPendingFriendEventListRsp);
}